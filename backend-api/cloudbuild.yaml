# [START cloudrun_rails_cloudbuild]
steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: ["-c", "docker build --progress=plain --build-arg MASTER_KEY=797a641b837c06c8a84f1a225569db74 --no-cache -t gcr.io/${PROJECT_ID}/${_SERVICE_NAME} . "]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]

  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    entrypoint: "bash"
    args:
      [
        "-c",
        # "/buildstep/execute.sh -i gcr.io/${PROJECT_ID}/${_SERVICE_NAME} -s ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} -e RAILS_MASTER_KEY=$$RAILS_KEY -e DATABASE_USERNAME=$$DB_USER -e DATABASE_PASSWORD=$$DB_PASS -e DATABASE_NAME=$$DB_NAME -- bundle exec rails db:migrate"
        # "/buildstep/execute.sh -i gcr.io/${PROJECT_ID}/${_SERVICE_NAME} -s ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} -e RAILS_MASTER_KEY=$$RAILS_KEY -e DATABASE_USERNAME=postgres -e DATABASE_PASSWORD=password -e DATABASE_NAME=postgres -- bundle exec rails db:migrate"
        # "/buildstep/execute.sh -i gcr.io/${PROJECT_ID}/${_SERVICE_NAME} -s ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} -e RAILS_MASTER_KEY=$$RAILS_KEY  -- bundle exec rails db:migrate"
        "/buildstep/execute.sh -i gcr.io/${PROJECT_ID}/${_SERVICE_NAME} -s ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} -e RAILS_MASTER_KEY=797a641b837c06c8a84f1a225569db74  -- bundle exec rails db:migrate"
      ]
    # secretEnv: ["RAILS_KEY", "DB_USER", "DB_PASS", "DB_NAME"]
    # secretEnv: ["RAILS_KEY"]

  # - id: "deploy to cloud run"
  #   name: "gcr.io/cloud-builders/gcloud"
  #   args:
  #     - "run"
  #     - "deploy"
  #     - "${_SERVICE_NAME}"
  #     - "--image"
  #     - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
  #     - "--platform"
  #     - "managed"
  #     - "--region"
  #     - "${_REGION}"
  #     - "--allow-unauthenticated"

  # - id: "run deploy"
  #   name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  #   entrypoint: gcloud
  #   args:
  #     [
  #       "run", "deploy",
  #       "${_SERVICE_NAME}",
  #       "--platform", "managed",
  #       "--region", "${_REGION}",
  #       "--image", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
  #     ]

  - id: "seed database"
    name: "gcr.io/google-appengine/exec-wrapper"
    entrypoint: "bash"
    args:
      [
        "-c",
        "/buildstep/execute.sh -i gcr.io/${PROJECT_ID}/${_SERVICE_NAME} -s ${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME} -e RAILS_MASTER_KEY=797a641b837c06c8a84f1a225569db74 -- bundle exec rails db:seed"
      ]

      
substitutions:
  _REGION: asia-southeast1
  _SERVICE_NAME: backend-dbs-grp7 # service-imba # change service name to test deployment agn
  _INSTANCE_NAME: backend-dbs-grp7
  # _SECRET_NAME_MASTER: RAILS_KEY
  # _SECRET_NAME_DB_USER: DB_USER_POSTGRES
  # _SECRET_NAME_DB_PASS: DB_PASS
  # _SECRET_NAME_DB_NAME: DB_NAME_POSTGRES

# availableSecrets:
#   secretManager:
#   - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_NAME_MASTER}/versions/latest
#     env: RAILS_KEY
  # - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_NAME_DB_USER}/versions/latest
  #   env: DB_USER
  # - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_NAME_DB_PASS}/versions/latest
  #   env: DB_PASS
  # - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_NAME_DB_NAME}/versions/latest
  #   env: DB_NAME

images:
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
# [END cloudrun_rails_cloudbuild]